{{- if .Values.testWorkload.enabled }}
---
apiVersion: v1
kind: Pod
metadata:
  name: {{ .Values.testWorkload.name }}
  namespace: {{ .Values.namespace.workload }}
  labels:
    {{ include "cilium-tls-intercept.labels" . | nindent 4 }}
    app: intercept-workload
    app.kubernetes.io/component: test-workload
spec:
  containers:
  - name: test
    image: {{ .Values.testWorkload.image }}
    command: ["/bin/sh"]
    args:
    - -c
    - |
      echo "Test pod ready for TLS interception testing"
      echo "Example commands to test:"
      echo "  curl -v https://api.github.com/meta"
      echo "  curl -v https://www.googleapis.com/discovery/v1/apis"
      echo ""
      echo "To verify interception, check if the certificate issuer is our internal CA:"
      echo "  curl -v https://github.com 2>&1 | grep 'issuer'"
      echo ""
      echo "Installing CA certificate for testing..."
      if [ -f /ca-cert/ca.crt ]; then
        cp /ca-cert/ca.crt /usr/local/share/ca-certificates/intercept-ca.crt
        update-ca-certificates 2>/dev/null || echo "Note: update-ca-certificates not available in this image"
        export SSL_CERT_FILE=/ca-cert/ca.crt
        export SSL_CERT_DIR=/ca-cert
        echo "CA certificate mounted at /ca-cert/ca.crt"
      fi
      echo "Ready for testing..."
      # Keep the container running
      tail -f /dev/null
    volumeMounts:
    - name: ca-cert
      mountPath: /ca-cert
      readOnly: true
  volumes:
  - name: ca-cert
    secret:
      secretName: intercept-ca
      items:
      - key: tls.crt
        path: ca.crt
      optional: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: intercept-test-scripts
  namespace: {{ .Values.namespace.workload }}
  labels:
    {{ include "cilium-tls-intercept.labels" . | nindent 4 }}
    app.kubernetes.io/component: test-scripts
data:
  test-interception.sh: |
    #!/bin/sh
    echo "=== TLS Interception Test Script ==="
    echo ""

    # Function to test a domain
    test_domain() {
      local domain=$1
      local path=$2
      echo "Testing $domain$path..."

      # Get certificate details
      echo | openssl s_client -connect $domain:443 -servername $domain 2>/dev/null | \
        openssl x509 -noout -issuer -subject 2>/dev/null | \
        grep -E "(issuer|subject)" || echo "  Failed to get certificate"

      # Make a request
      curl -s -o /dev/null -w "  HTTP Status: %{http_code}\n" https://$domain$path || echo "  Request failed"
      echo ""
    }

    # Test GitHub
    if [ "{{ .Values.intercept.github.enabled }}" = "true" ]; then
      echo "--- GitHub Interception Test ---"
      test_domain "api.github.com" "/meta"
    fi

    # Test AWS
    if [ "{{ .Values.intercept.aws.enabled }}" = "true" ]; then
      echo "--- AWS Interception Test ---"
      test_domain "s3.amazonaws.com" "/"
    fi

    # Test Google
    if [ "{{ .Values.intercept.google.enabled }}" = "true" ]; then
      echo "--- Google APIs Interception Test ---"
      test_domain "www.googleapis.com" "/discovery/v1/apis"
    fi

    echo "=== Test Complete ==="

  verify-setup.sh: |
    #!/bin/sh
    echo "=== Verifying TLS Interception Setup ==="
    echo ""

    echo "1. Checking Certificates:"
    kubectl get certificates -n {{ .Values.namespace.secrets }}
    echo ""

    echo "2. Checking Secrets:"
    kubectl get secrets -n {{ .Values.namespace.secrets }} | grep intercept
    echo ""

    echo "3. Checking Cilium Policy:"
    kubectl get ciliumnetworkpolicies -n {{ .Values.namespace.workload }}
    echo ""

    echo "4. Checking ClusterIssuer:"
    kubectl get clusterissuer intercept-ca-issuer
    echo ""

    echo "=== Verification Complete ==="
{{- end }}