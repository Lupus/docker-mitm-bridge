{{- if .Values.testWorkload.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.testWorkload.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.testWorkload.name }}
spec:
  replicas: {{ .Values.testWorkload.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.testWorkload.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.testWorkload.name }}
        "{{ .Values.kyverno.annotationKey }}": "{{ .Values.kyverno.annotationValue }}"
    spec:
      containers:
      - name: test-container
        image: {{ .Values.testWorkload.image }}
        imagePullPolicy: IfNotPresent
        command:
        - /bin/sh
        - -c
        - |
          echo "Test pod started. Testing proxy interception..."

          # Wait for sidecars to be ready
          sleep 10

          echo "=========================================="
          echo "Environment variables:"
          echo "HTTP_PROXY: $HTTP_PROXY"
          echo "HTTPS_PROXY: $HTTPS_PROXY"
          echo "NO_PROXY: $NO_PROXY"
          echo "SSL_CERT_FILE: $SSL_CERT_FILE"
          echo "=========================================="

          echo "Testing CA certificate installation:"
          if [ -f "$SSL_CERT_FILE" ]; then
            echo "✓ CA certificate found at $SSL_CERT_FILE"
            echo "Certificate details:"
            cat "$SSL_CERT_FILE" | head -n 5
          else
            echo "✗ CA certificate not found!"
          fi
          echo "=========================================="

          echo "Testing proxy connectivity to Envoy admin:"
          curl -s http://localhost:{{ .Values.envoy.adminPort }}/ready && echo "✓ Envoy proxy is ready" || echo "✗ Envoy proxy not ready"

          {{- if .Values.opa.enabled }}
          echo "Testing OPA sidecar:"
          curl -s http://localhost:{{ .Values.opa.port }}/health && echo "✓ OPA is ready" || echo "✗ OPA not ready"
          {{- end }}
          echo "=========================================="

          echo "Keeping pod alive for manual testing..."
          echo "You can exec into this pod and test with:"
          echo "  kubectl exec -it deploy/{{ .Values.testWorkload.name }} -n {{ .Values.namespace }} -- sh"
          echo ""
          echo "Then test HTTPS interception with:"
          echo "  curl -v https://api.github.com/meta"
          echo "  curl -v https://pypi.org/simple/"
          echo ""
          echo "Test blocked domains:"
          echo "  curl -X POST https://api.github.com/repos/test/test"
          echo "=========================================="

          # Keep pod running
          while true; do
            sleep 3600
          done
        resources:
          requests:
            memory: "32Mi"
            cpu: "10m"
          limits:
            memory: "64Mi"
            cpu: "50m"
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.testWorkload.name }}
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: {{ .Values.testWorkload.name }}
  ports:
  - name: http
    port: 80
    targetPort: 8080
{{- end }}